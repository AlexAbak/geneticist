package org.deneblingvo.geneticist.test;

public class AlgorithmTest1 implements AlgorithmTest {

	private int v1;

	private int v2;

	private int v3;

	public void set(int v1, int v2) {
		this.v1 = v1;
		this.v2 = v2;
	}

	public int get() {
		return this.v3;
	}

	public void test() {
while ((((((v2 | v1) * (v2--)) | (((v2 / (--v2)) & (v2>>>1)) + (--v1)))<<1) > (v1++))) {
	if (((v1>>1) <= (v3--))) {
	v2 = ((((true | (((~(++v1)) % ((--v1) * ((((((((v3 - (((-(v2--)) & (v2>>1)) / (+((v1 % v3) | (--v3))))) & (((+(++v1))>>1)>>1)) % (~((++v3)<<1)))>>1) < (--v1)) || ((((+(v3>>>1)) + (~(--v2))) + ((++v3) & (--v1))) == (-((v3>>>1)>>1))))) ? ((v2++) - ((-((v3++) + (((--v3) + (--v2)) / (+(v1 & (+v1)))))) * ((((v3++) % v1) | (++v1)) & ((+((((((v3 != v3) || (true && false))) ? (((!true)) ? (~v2) : (v3++)) : ((false) ? v1 : v1)) * (~(v3--))) * ((((v1 | v1) % (v2>>1)) | v1) & ((v2 % (v2++)) | (+(v1 - v1)))))) / ((v1 & (~(v2 % (++v2)))) % (+(-v3))))))) : ((+(((((((v1++) > (++v3)) == ((+(((true != (v1 >= v1))) ? (((true != false)) ? v2 : (v2 & v3)) : ((v1 * v2) / (v1>>>1)))) < ((v1>>>1) % (-(v3 - (v1++))))))) ? (((v1++) != ((v3++)>>1)) & (((+(v2 % (v3--))) > ((v1++) - (v2 % (v3<<1)))) != ((~((++v1) * (v2 * v3))) >= (v2 / ((++v2) - (v2 * v3)))))) : ((v2>>>1) >= (((--v1)>>>1)>>>1)))) ? (((true) ? v1 : v2) + (((((--v2) - ((v2--) | (++v1))) | (((((true) ? v1 : v1) >= v3)) ? v3 : ((v2 | v2) * v1))) & (--v3)) - (v2 | v3))) : v1)) / ((-((++v2) % (((v3--)>>1) / (++v2)))) | ((((v3++) - v3) + (--v3)) & (((((v3--) + (+((v2 | v2) - v3)))>>>1)<<1) - (((((((v3 - v1) * (+v1)) == (v1 * (v3 * v2)))) ? ((v3--)>>>1) : (+(((v2 > v1)) ? v2 : (v3 | v3)))) / (((v3--)<<1) & (((v2 % v1)>>>1) / v1))) % (++v1))))))))) <= ((v1++) + (v2 * (--v3)))))) ? (((~(--v3)) - (((v1 > (v1--))) ? (++v1) : (~(~(((((((-(((v1 + v3) / (-v3))>>1)) - (((((v2>>>1) != (++v2))) ? ((++v1)<<1) : (--v2)) - v3)) + v2) & ((++v2)<<1)) | ((v1>>1) % (--v3))) - ((~(v1 / (v1--)))>>>1)) / (~((v3--) - (((~(((v1++) / (~v3)) & ((-(v1++)) / ((v1<<1) & (v2>>>1))))) + v1) / (((((v2 | v2)<<1)>>1)>>>1) & (v1++))))))))))>>>1) : (v1>>1))>>>1);

} else {
	v2 = (((~((((-((v3<<1) / (++v3))) | (((v2++) + ((((-v2) + (v1--)) | (~((++v3) - (v2--)))) * v2))>>>1)) + ((((false) ? (v3<<1) : (v3--)) & (~(v2>>1))) & (~((((v3++) - (((++v3)>>1) * v3)) + ((+(++v2)) * ((-(v2 % (((--v2) * (((false) ? v2 : v2) % (v2 - v3))) | ((+(~v2)) | (((false != true)) ? v3 : v2))))) & ((true) ? (v2--) : (~v3)))))>>1)))) - (((--v3)>>1) - (v3++)))) & (((++v1) / (((--v2)<<1)<<1)) + (-((+((++v3) / (-(-(++v1)))))>>1))))<<1);

}

}

	}

}
